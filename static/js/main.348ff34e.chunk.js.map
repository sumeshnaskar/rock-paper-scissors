{"version":3,"sources":["components/Game/styles/game.js","components/Game/index.js","images/luis-quintero-1M-7-W6wHb8-unsplash.jpg","constants/array.js","images/mika-korhonen-Xodzxosar18-unsplash.jpg","images/nathan-fertig-y0HerwKQLMk-unsplash.jpg","containers/game.js","hooks/useLogic.js","components/Loading/styles/loading.js","components/Loading/index.js","containers/loading.js","global-styles.js","App.js","index.js"],"names":["Container","styled","div","Title","h1","Subtitle","h2","Text","h3","ButtonWrapper","Button","button","src","Image","isPlayer","SmallText","p","Game","children","restProps","buttons","playerText","botText","GameContainer","useReducer","state","action","type","round","botImage","setBotImage","playerImage","setPlayerImage","botWin","displayWinner","text","playerWin","rock","useLogic","dispatch","randomIndex","Math","floor","random","display","paper","scissors","style","color","handleChange","event","winner","value","botPick","playerPick","parseInt","computeWinner","target","index","border","padding","borderRadius","marginRight","justifyContent","flexDirection","map","onClick","loading","keyframes","Loading","LoadingContainer","useState","setLoading","useEffect","setTimeout","GlobalStyles","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.348ff34e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    width: 90%;\r\n    margin: 0 auto;\r\n`\r\nexport const Title = styled.h1`\r\n    font-size: 4em;\r\n    text-align: center;\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    margin-top: 0.5em;\r\n    color: #bf1733;\r\n    font-weight: 700;\r\n\r\n    @media(max-width: 950px){\r\n        font-size: 3em;\r\n    }\r\n`\r\nexport const Subtitle = styled.h2`\r\n    font-weight: 700;\r\n    font-size: 1.5em;\r\n    color: #17bf8f;\r\n    text-align: center;\r\n    margin-bottom: 2em;\r\n\r\n    @media(max-width: 950px){\r\n        line-height: 1.8;\r\n        font-size: 1em;\r\n    }\r\n`\r\nexport const Text = styled.h3`\r\n    width: 250px; \r\n    color: #dea431;\r\n    border: 2px solid #b942ff;\r\n    padding: 1em 1em;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    \r\n\r\n    @media(max-width: 950px){\r\n        width: 150px;\r\n        padding: .5em .5em;\r\n    }\r\n`\r\n\r\nexport const ButtonWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nexport const Button = styled.button`\r\n    background: url(${ ({ src }) => src }) no-repeat center ;\r\n    background-blend-mode: screen;\r\n    background-size: cover;\r\n    color: white;\r\n    width:100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n    border: 2px solid white;\r\n    margin: 0 0.5em;\r\n    cursor: pointer;\r\n    font-size: 1em;   \r\n    font-weight: 700;\r\n\r\n    &:hover{\r\n        color: #17bf8f;\r\n        border: 2px solid #17bf8f;\r\n        \r\n    }\r\n\r\n    @media(max-width: 950px){\r\n        margin-top: 2em;\r\n    }\r\n`\r\nexport const Image = styled.div`\r\n    background: url(${ ({ src }) => src }) no-repeat center;\r\n    background-size: cover;\r\n    width:250px;\r\n    height: 250px;\r\n    transform: ${({ isPlayer })=>(isPlayer ? 'rotate(90deg)' : 'rotate(-90deg)')};\r\n    border: 2px solid white;\r\n    border-radius: 10%;\r\n\r\n    @media(max-width: 950px){\r\n        width: 125px;\r\n        height: 125px;\r\n    }\r\n`\r\n\r\nexport const SmallText = styled.p`\r\n    color: #b942ff;\r\n    font-size: 0.5rem;   \r\n    font-weight: 400;\r\n    text-align: center;\r\n    margin-bottom: 0;\r\n\r\n    @media(max-width: 950px){\r\n        margin-top: 3em;\r\n        font-size: 0.3rem;\r\n    }\r\n`\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport { Container, Title, Subtitle, Text, Image, ButtonWrapper, Button, SmallText} from \"./styles/game\"\r\n\r\nexport function Game({ children, ...restProps }) {\r\n    return <Container {...restProps}>{children}</Container>\r\n}\r\n\r\nGame.Title = function GameTitile({ children, ...restProps }){\r\n    return <Title {...restProps}>{children}</Title>\r\n}\r\n\r\nGame.Subtitle = function GameSubtitle({ children, ...restProps }){\r\n    return <Subtitle {...restProps}>{children}</Subtitle>\r\n}\r\n\r\nGame.Text = function GameText({ children, ...restProps }){\r\n    return <Text {...restProps}>{children}</Text>\r\n}\r\n\r\nGame.ButtonWrapper = function GameButtonWrapper({ children, ...restProps }){\r\n    return <ButtonWrapper {...restProps}>{children}</ButtonWrapper>\r\n}\r\n\r\nGame.Button = function GameButton({ children, ...restProps }){\r\n    return <Button {...restProps}>{children}</Button>\r\n}\r\n\r\nGame.Image = function GameImage({ children, ...restProps }){\r\n    return <Image {...restProps}/>\r\n}\r\n\r\nGame.SmallText = function GameSmallText({children, ...restProps }){\r\n    return <SmallText {...restProps}>{children}</SmallText>\r\n}","export default __webpack_public_path__ + \"static/media/luis-quintero-1M-7-W6wHb8-unsplash.59bcf6d5.jpg\";","export const buttons = [\r\n    \"Rocküëä\", \r\n    \"Paper‚úã\", \r\n    \"Scissors‚úåÔ∏è\"\r\n]\r\n\r\nexport const playerText = [\r\n    \"All I know is winning!\", \r\n    \"Don't mess with me, I'm pro!\",\r\n    \"Do you want me to go easy on you?\"\r\n]\r\n\r\nexport const botText = [\r\n    \"Bring in some real players!\",\r\n    \"Do you want me to teach you?\",\r\n    \"Winning is too easy for me!\"\r\n]","export default __webpack_public_path__ + \"static/media/mika-korhonen-Xodzxosar18-unsplash.0da92547.jpg\";","export default __webpack_public_path__ + \"static/media/nathan-fertig-y0HerwKQLMk-unsplash.bb9c75a4.jpg\";","import React from \"react\"\r\n\r\nimport { Game } from \"../components/Game\"\r\nimport { useLogic } from \"../hooks/useLogic\"\r\nimport { buttons, playerText, botText } from \"../constants/array\"\r\n\r\nimport rock from \"../images/luis-quintero-1M-7-W6wHb8-unsplash.jpg\"\r\nimport paper from \"../images/mika-korhonen-Xodzxosar18-unsplash.jpg\"\r\nimport scissors from \"../images/nathan-fertig-y0HerwKQLMk-unsplash.jpg\"\r\n\r\nexport function GameContainer(){\r\n    const [ {round, playerWin, botWin, displayWinner, playerImage, botImage}, dispatch ] = useLogic()\r\n    const randomIndex = () =>  Math.floor(Math.random() * 3)\r\n    const display = [rock, paper, scissors]\r\n    const style = { color: \"#17bf8f\"} \r\n    \r\n\r\n    const computeWinner = (value) => {\r\n        const botPick = randomIndex()\r\n        const playerPick = parseInt(value)\r\n        dispatch({type:\"ROUNDINC\", setBotImage: display[botPick], setPlayerImage: display[playerPick]})\r\n        if ( playerPick === botPick ) return \"Tie\"\r\n        switch(value){\r\n            case \"0\": return botPick === 1 ? \"Bot\" : \"Player\"\r\n            case \"1\": return botPick === 2 ? \"Bot\" : \"Player\"\r\n            case \"2\": return botPick === 0 ? \"Bot\" : \"Player\"\r\n            default: return null\r\n        }\r\n    }\r\n\r\n    function handleChange(event){\r\n        const { value } = event.target\r\n        const winner = computeWinner(value)\r\n        const index = randomIndex()\r\n        switch(winner){\r\n            case \"Bot\": dispatch({type:\"BOTWIN\", text: `Bot says \"${botText[index]}\"`})\r\n                break\r\n            case \"Player\": dispatch({type:\"PLAYERWIN\", text: `Player says \"${playerText[index]}\"`})\r\n                break\r\n            default: dispatch({type:\"TIE\", text: \"TIED! Let's play another round.\"})\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Game>\r\n                <Game.Title> \r\n                    Round <span style={ style }>{round}</span>\r\n                </Game.Title>\r\n\r\n                <Game.Subtitle>\r\n                    <span \r\n                    style={{color: \"#dea431\", \r\n                    border: \"2px solid white\", \r\n                    padding: \"0.5em\",\r\n                    borderRadius: \"50px\", \r\n                    marginRight: \"0.5em\"}}>\r\n                        Winning note \r\n                    </span>\r\n                    {displayWinner}\r\n                </Game.Subtitle>\r\n\r\n                <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                    <Game.Image isPlayer={true} src={playerImage}/>\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-around\"}}>\r\n                        <Game.Text>Player - <span style={ style }>{playerWin}</span></Game.Text>\r\n                        <Game.Text>Bot - <span style={ style }>{botWin}</span></Game.Text>\r\n                    </div>\r\n                    <Game.Image isPlayer={false} src={botImage}/>             \r\n                </div>\r\n                \r\n                <Game.ButtonWrapper>\r\n                    {buttons.map((button, index)=>(\r\n                        <Game.Button                           \r\n                            key={`button ${index}`}\r\n                            src={display[index]}\r\n                            onClick={handleChange} \r\n                            value={index}\r\n                        >\r\n                            {button}\r\n                        </Game.Button>                       \r\n                    ))}\r\n                </Game.ButtonWrapper>\r\n            </Game>\r\n\r\n            <Game.SmallText>Photos by Unsplash: @luis quintero(Rocküëä) \r\n                @mika korehonen(Paper‚úã) and\r\n                @Nathan Fertig(Scissors‚úåÔ∏è) \r\n            </Game.SmallText>\r\n        </>\r\n    )\r\n}","import { useReducer } from \"react\"\r\nimport  rock  from \"../images/luis-quintero-1M-7-W6wHb8-unsplash.jpg\"\r\n\r\nexport function useLogic(){\r\n    const [state, dispatch] = useReducer((state, action)=>{\r\n        switch(action.type){\r\n            case \"ROUNDINC\":\r\n                return { ...state, \r\n                    round: state.round+1, \r\n                    botImage: action.setBotImage, \r\n                    playerImage: action.setPlayerImage}\r\n            case \"BOTWIN\":\r\n                return { ...state, botWin: state.botWin + 1, displayWinner: action.text }\r\n            case \"PLAYERWIN\":\r\n                return { ...state, playerWin: state.playerWin + 1, displayWinner: action.text}\r\n            default: return { ...state, displayWinner: action.text}\r\n        }\r\n    },{\r\n        round: 1,\r\n        playerWin: 0,\r\n        botWin: 0,\r\n        displayWinner: '',\r\n        playerImage: `${rock}`,\r\n        botImage: `${rock}`\r\n    })\r\n\r\n    return [state, dispatch]\r\n}","import styled, { keyframes } from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #505A62;\r\n    width: 100%;\r\n    height: 100vh;\r\n`\r\n\r\nconst loading = keyframes`\r\n    0% {\r\n        max-width: 0;\r\n        color: #FF5D5D;\r\n    }\r\n`\r\n\r\nexport const Text = styled.h1`\r\n    position: relative;\r\n    color: rgba(0, 0, 0, 0.05);\r\n    text-align: center;\r\n    font-size: 5em;\r\n    margin: auto;\r\n    width: 100%;\r\n\r\n    &:before {\r\n        content: attr(data-text);\r\n        position: absolute;\r\n        overflow: hidden;\r\n        max-width: 7em;\r\n        white-space: nowrap;\r\n        color: #ADFC90;\r\n        animation: ${loading} 1.5s linear infinite alternate;\r\n    }\r\n`","import React from \"react\"\r\nimport { Container, Text } from \"./styles/loading\"\r\n\r\nexport function Loading({ children, ...restProps }){\r\n    return <Container { ...restProps }>{ children }</Container>\r\n}\r\n\r\nLoading.Text =  function LoadingText({ children, ...restProps }) {\r\n    return <Text { ...restProps }>{ children }</Text>\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { GameContainer } from \"./game\"\r\n\r\nimport { Loading } from \"../components/Loading\"\r\n\r\nexport function LoadingContainer(){\r\n    const [ loading, setLoading ] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setLoading(false)\r\n        }, 4500)\r\n    })\r\n    \r\n    return (\r\n        <>\r\n            {loading ? \r\n            <Loading>\r\n                <Loading.Text data-text=\"Fine tuning...\"> \r\n                Fine tuning...\r\n                </Loading.Text>\r\n            </Loading> :\r\n            <GameContainer/>}\r\n        </>\r\n \r\n    )\r\n}","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n   *{\r\n       box-sizing: border-box;\r\n   } \r\n\r\n   html, body{\r\n       font-family: 'Lato', sans-serif;\r\n       margin: 0;\r\n       background: #1f1919;\r\n   }\r\n`","import React from \"react\"\n\nimport { LoadingContainer } from \"./containers/loading\"\nimport { GlobalStyles } from \"./global-styles\"\n\nfunction App(){\n  return (\n    <>\n      <GlobalStyles/>\n      <LoadingContainer/>\n    </>\n  )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}